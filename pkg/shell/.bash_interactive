#
# ~/.bashrc
#
# vi: ft=bash

# Skip this entire file if we're in direnv envrc
if [ ! -z "$DIRENV_IN_ENVRC" ]; then
  return
fi

# -------------------------------------------------------
# Prompt
# -------------------------------------------------------

# Prompt colors
_txt_col="\e[00m"    # Std text (white)
_bld_col="\e[01;37m" # Bold text (white)
_grn_col="\e[0;32m"  # Green

_wrn_col="\e[01;31m" # Warning
_sep_col=$_txt_col   # Separators
_usr_col="\e[01;32m" # Username
_cwd_col=$_txt_col   # Current directory
_hst_col=$_grn_col   # Host
_env_col="\e[0;36m"  # Prompt environment
_git_col="\e[01;36m" # Git branch

# Set custom prompt
PROMPT_COMMAND=''

function set_term_title() {
  local -r wd=$(pwd | sed "s_${HOME}_~_")
  echo -ne "\033]0;$(whoami)@$(hostname): ${wd}\007"
  export STARSHIP_CMD_STATUS
}

starship_precmd_user_func="set_term_title"

# Set GREP highlight color
export GREP_COLORS='mt=1;32'

# -------------------------------------------------------
# Config: Bash History
# -------------------------------------------------------

# Eternal bash history.
# ---------------------
# Undocumented feature which sets the size to "unlimited".
# http://stackoverflow.com/questions/9457233/unlimited-bash-history
export HISTCONTROL=ignorespace
export HISTFILESIZE
export HISTSIZE
export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=~/.bash_eternal_history
# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

shopt -s histappend

function source_file() {
  if [ -z "$DIRENV_IN_ENVRC" ]; then
    if [ -f "$1" ]; then
      source "$1"
    fi
  fi
}

source_file "$HOME/src/shrc/pkg/shell/.bash_funcs"
source_file "$HOME/src/shrc/pkg/shell/.bash_aliases"

# Home Manager will handle this for us
if [ -z "$BASHRC_HOME_MANAGER" ]; then
  # Setup zoxide autojumper
  eval "$(zoxide init bash)"
  if [ -x "$(command -v direnv 2>/dev/null)" ]; then
    eval "$(direnv hook bash)"
  fi
  eval "$(starship init bash)" # starship must be last to modify PROMPT_COMMAND

  source_file "$HOME/src/shrc/pkg/shell/.fzf.bash"
fi

# SCM_Breeze doesn't trigger the dynamic loading of the git completions file
# but depends on function definitions within the git completion script to be
# sourced. So we do that explicitly instead of relying on bash to lazy load
source_file "/etc/profiles/per-user/ghthor/share/bash-completion/completions/git" # nixos
source_file "$HOME/.nix-profile/share/bash-completion/completions/git"            # darwin
source_file "$HOME/src/shrc/pkg/scm_breeze/.scm_breeze/scm_breeze.sh"

set -o vi

for hashi in nomad consul vault terraform; do
  if ! command -v $hashi; then
    continue
  fi
  if [ -x "$(command -v $hashi)" ]; then
    complete -C "$(command -v $hashi)" $hashi
  fi
done
